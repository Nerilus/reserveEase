version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - .env:/app/.env
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
    depends_on:
      - db

  db:
    image: postgres:13
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migration/dump.sql:/docker-entrypoint-initdb.d/dump.sql:ro

  adminer:
    image: adminer
    restart: always
    ports:
      - "8282:8080"
    depends_on:
      - db

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: always
    depends_on:
     - your_service_name
    ports:
     - 80:80
     - 443:443
    networks:
     - mynetwork
  certbot:
    image: certbot/certbot
    container_name: certbot
    networks:
      - mynetwork
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email email_name -d domain_name --agree-tos
      
networks:
   mynetwork:
     driver: bridge
volumes:
  postgres_data:
 